<?php

class fetchURL
{

	function fetchgivenURL($URL){
		$url = $this->checkValues($URL);
		$string = $this->fetch_record($url);
		/// fecth title
		$title_regex = "/<title>(.+)<\/title>/i";
		preg_match_all($title_regex, $string, $title, PREG_PATTERN_ORDER);
		$url_title = $title[1];
		
		/// fecth decription
		$tags = @get_meta_tags($url);
		
		$graph = OpenGraph::fetch($url);
		//print_r($graph);
		
		/// fetch og meta tags
		$ogTags = $this->get_og_meta_tags($string);
		$linkType = isset($ogTags['og:type']) ? $ogTags['og:type'] : '';
		$image_og="";
		if( isset($ogTags['og:image'])){
			$image_og  = $ogTags['og:image'];
		}
		$image_twitter='';
		if(isset($tags['twitter:image'])){
			$image_twitter=$tags['twitter:image'];
		}
		// fetch images
		$image_regex = '/<img[^>]*'.'src=[\"|\'](.*)[\"|\']/Ui';
		preg_match_all($image_regex, $string, $img, PREG_PATTERN_ORDER);
		$images_array = $img[1];
		
		$html='';		
	
		//echo trim($linkType);
	//	echo $tags['twitter:player'];
//		exit;
		
//		echo strpos($graph->player, "https://");
//		echo 'd';		
//		print_r($tags);
//		if( (trim($linkType) == 'video') && (isset($tags['twitter:player']) && $tags['twitter:player'] != '' ) ) {
		if( (trim($linkType) == 'video') && (isset($tags['twitter:player'])) && (strpos($tags['twitter:player'], "https://") !== false) ) {
//		echo $tags['twitter:player'];
//		print_r($tags);
//echo 'asd';
//echo 'asdf';
			$html .= '<div class="embed-responsive embed-responsive-4by3">';
			$html .= '<iframe src="'.$tags['twitter:player'].'" frameborder="0" allowfullscreen></iframe>';
			$html .='</div>';
		} 
		else if( (trim($linkType) == 'video') && $graph->player != '' && (strpos($graph->player, "https://") !== false) ){
		
		
//echo 'ghjghj';
			$html .= '<div class="embed-responsive embed-responsive-4by3">';
			$html .= '<iframe src="'.$graph->{'player'}.'" frameborder="0" allowfullscreen></iframe>';
			$html .='</div>';
		
	/*	$html .= "<object type='".$graph->{'video:type'}."' data='".$graph->{'video'}."' height='".$graph->{'video:height'}."' width='".$graph->{'video:width'}."' >";
		$html .= "<param name='allowscriptaccess' value='never'><param name='flashvars' value='height=".$graph->{'video:height'}."&amp;width=".$graph->{'video:width'}."'>";
		$html .= "<param name='movie' value='".$graph->{'video'}."'><param name='swf' value='".$graph->{'video'}."'>";
		$html .= "<param name='id' value='swf_u_t_4'><param name='holder' value='u_t_4'><param name='color' value='#FFFFFF'><param name='width' value='".$graph->{'video:width'}."'><param name='height' value='".$graph->{'video:height'}."'><param name='version' value='0'><param name='scale' value='scale'><param name='allowFullScreen' value='true'><param name='salign' value='tl'><param name='wmode' value='opaque'>";
			$html .='</object>';
		*///
		
		}
		else if($image_twitter!=''){
			$html .='<div class="images">';
			$html .='<img src="https://quakbox.com/common/image_fetch.php?url='.$image_twitter.'" width="100%" >';
			$html .='</div>';	
		} 
		// by tom
		else if( $image_og != "" ){
			$html .='<div class="images">';
			$html .='<img src="https://quakbox.com/common/image_fetch.php?url='.$image_og.'" width="100%" >';
			$html .='</div>';
		}
		else{
			$k=1;
			$j=0;
			for ($i=0;$i<=sizeof($images_array);$i++)
			{
				if(@$images_array[$i])
				{					
				
					if(@getimagesize(@$images_array[$i]))
					{						
						
						list($width, $height, $type, $attr) = getimagesize(@$images_array[$i]);
						if($width >= 50 && $height >= 50){					
							$html .="<div class='images'><img src='https://quakbox.com/common/image_fetch.php?url=".@$images_array[$i]."' width='100%' id='".$k."' ></div>";	
							break;				
							$k++;
							$j=$i;					
						}
						
					}
					else{
					$getsubstring=substr(@$images_array[$i],0,2);		
					
					if($getsubstring=='//'){
						$imagesrc="http:".@$images_array[$i];
						list($width, $height, $type, $attr) = getimagesize($imagesrc);
						if($width >= 50 && $height >= 50){					
							$html .="<div class='images'><img src='https://quakbox.com/common/image_fetch.php?url=".$imagesrc."' width='100%' id='".$k."' ></div>";	
							break;				
							$k++;
							$j=$i;					
						}
					}
					
													
							
					}
				
			}
		}
			
		}
		//$html .='<input type="hidden" name="total_images" id="total_images" value="'.$k.'" />';
		
			
		$html .='<div class="info" style="font-weight:normal;font-size: 11px;">';			
		$html .='<div class="title" style="font-size: 12px;border-bottom: 1px solid #ddd;">'.@$url_title[0].'</div>';
//		$html .='<div class="url"><a style="text-decoration:none;font-weight:normal;" target="_blank" href="'.$url.'" title="'.@$url_title[0].'">'.substr($url ,0,35).'..</a></div>';		
//		$html .='<div class="desc">'.substr(@$tags['description'],0,100).'..</div>';		
		$html .='</div>	';

		return $html;
	}
	
	function checkValues($value)
	{
		$value = trim($value);
		if (get_magic_quotes_gpc()) 
		{
			$value = stripslashes($value);
		}
		$value = strtr($value, array_flip(get_html_translation_table(HTML_ENTITIES)));
		$value = strip_tags($value);
		$value = htmlspecialchars($value);
		return $value;
	}	
	
	function fetch_record($path)
	{
		$context = array(
		    'http'=>array('max_redirects' => 99)
		);
		$context = stream_context_create($context);
		// hand over the context to fopen()
		$file = @fopen($path, "r", false, $context); 
		if (!$file)
		{
			//exit("Problem occured");
return null;
		} 
		$data = '';
		while (!feof($file))
		{
			$data .= fgets($file, 1024);
		}
		return $data;
	}
	
	function get_og_meta_tags($urlstring) {
		$html = new DOMDocument();
		@$html->loadHTML($urlstring);
		$og_tags = '';
		
		$ogmetas = $html->getElementsByTagName('meta');
		
		//Get all meta tags and loop through them.
		foreach($ogmetas as $meta) {
			//Assign the value from content attribute to $meta_og_img
			$key = $meta->getAttribute('property');
			$og_tags[$key] = $meta->getAttribute('content');
		}
		
		return $og_tags;
	}
	
	

}

?>